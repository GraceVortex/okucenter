# Generated by Django 4.2.7 on 2025-05-21 07:20

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('contenttypes', '0002_remove_content_type_name'),
        ('crm', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Заголовок')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('activity_type', models.CharField(choices=[('task', 'Задача'), ('call', 'Звонок'), ('meeting', 'Встреча'), ('email', 'Email'), ('note', 'Заметка'), ('other', 'Другое')], max_length=20, verbose_name='Тип активности')),
                ('priority', models.CharField(choices=[('low', 'Низкий'), ('medium', 'Средний'), ('high', 'Высокий'), ('urgent', 'Срочный')], default='medium', max_length=20, verbose_name='Приоритет')),
                ('status', models.CharField(choices=[('not_started', 'Не начато'), ('in_progress', 'В процессе'), ('completed', 'Завершено'), ('deferred', 'Отложено'), ('cancelled', 'Отменено')], default='not_started', max_length=20, verbose_name='Статус')),
                ('due_date', models.DateTimeField(blank=True, null=True, verbose_name='Срок выполнения')),
                ('start_date', models.DateTimeField(blank=True, null=True, verbose_name='Дата начала')),
                ('end_date', models.DateTimeField(blank=True, null=True, verbose_name='Дата окончания')),
                ('completed_date', models.DateTimeField(blank=True, null=True, verbose_name='Дата выполнения')),
                ('object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_activities', to=settings.AUTH_USER_MODEL, verbose_name='Ответственный')),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_activities', to=settings.AUTH_USER_MODEL, verbose_name='Создал')),
            ],
            options={
                'verbose_name': 'Активность',
                'verbose_name_plural': 'Активности',
                'ordering': ['-due_date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Название компании')),
                ('company_type', models.CharField(choices=[('client', 'Клиент'), ('partner', 'Партнер'), ('vendor', 'Поставщик'), ('other', 'Другое')], default='client', max_length=20, verbose_name='Тип компании')),
                ('website', models.URLField(blank=True, null=True, verbose_name='Веб-сайт')),
                ('phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Телефон')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('address', models.TextField(blank=True, null=True, verbose_name='Адрес')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('responsible', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='responsible_for_companies', to=settings.AUTH_USER_MODEL, verbose_name='Ответственный')),
            ],
            options={
                'verbose_name': 'Компания',
                'verbose_name_plural': 'Компании',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=100, verbose_name='Фамилия')),
                ('middle_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Отчество')),
                ('contact_type', models.CharField(choices=[('client', 'Клиент'), ('lead', 'Лид'), ('contact_person', 'Контактное лицо'), ('other', 'Другое')], default='client', max_length=20, verbose_name='Тип контакта')),
                ('phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Телефон')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('position', models.CharField(blank=True, max_length=100, null=True, verbose_name='Должность')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Примечания')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='contacts', to='crm.company', verbose_name='Компания')),
                ('responsible', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='responsible_for_contacts', to=settings.AUTH_USER_MODEL, verbose_name='Ответственный')),
            ],
            options={
                'verbose_name': 'Контакт',
                'verbose_name_plural': 'Контакты',
                'ordering': ['last_name', 'first_name'],
            },
        ),
        migrations.CreateModel(
            name='Integration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название интеграции')),
                ('integration_type', models.CharField(choices=[('whatsapp', 'WhatsApp'), ('instagram', 'Instagram'), ('telegram', 'Telegram'), ('email', 'Email'), ('sms', 'SMS'), ('custom', 'Пользовательская')], max_length=20, verbose_name='Тип интеграции')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активна')),
                ('settings', models.JSONField(default=dict, verbose_name='Настройки интеграции')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_integrations', to=settings.AUTH_USER_MODEL, verbose_name='Создал')),
            ],
            options={
                'verbose_name': 'Интеграция',
                'verbose_name_plural': 'Интеграции',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Pipeline',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название воронки')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активна')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
            ],
            options={
                'verbose_name': 'Воронка продаж',
                'verbose_name_plural': 'Воронки продаж',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Webhook',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
                ('url', models.URLField(verbose_name='URL вебхука')),
                ('secret_key', models.CharField(blank=True, max_length=100, null=True, verbose_name='Секретный ключ')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('events', models.JSONField(default=list, verbose_name='События')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_webhooks', to=settings.AUTH_USER_MODEL, verbose_name='Создал')),
                ('integration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='webhooks', to='crm.integration', verbose_name='Интеграция')),
            ],
            options={
                'verbose_name': 'Вебхук',
                'verbose_name_plural': 'Вебхуки',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Call',
            fields=[
                ('activity_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='crm.activity')),
                ('phone_number', models.CharField(max_length=20, verbose_name='Номер телефона')),
                ('direction', models.CharField(choices=[('incoming', 'Входящий'), ('outgoing', 'Исходящий')], max_length=20, verbose_name='Направление')),
                ('duration', models.PositiveIntegerField(default=0, verbose_name='Длительность (сек)')),
                ('call_result', models.CharField(blank=True, choices=[('answered', 'Отвечен'), ('not_answered', 'Не отвечен'), ('busy', 'Занято'), ('wrong_number', 'Неверный номер'), ('voicemail', 'Голосовая почта')], max_length=20, null=True, verbose_name='Результат звонка')),
                ('recording_url', models.URLField(blank=True, null=True, verbose_name='URL записи разговора')),
            ],
            options={
                'verbose_name': 'Звонок',
                'verbose_name_plural': 'Звонки',
            },
            bases=('crm.activity',),
        ),
        migrations.CreateModel(
            name='Email',
            fields=[
                ('activity_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='crm.activity')),
                ('sender', models.EmailField(max_length=254, verbose_name='Отправитель')),
                ('recipient', models.EmailField(max_length=254, verbose_name='Получатель')),
                ('cc', models.TextField(blank=True, null=True, verbose_name='Копия')),
                ('bcc', models.TextField(blank=True, null=True, verbose_name='Скрытая копия')),
                ('subject', models.CharField(max_length=200, verbose_name='Тема')),
                ('body', models.TextField(verbose_name='Текст письма')),
                ('is_html', models.BooleanField(default=False, verbose_name='HTML-формат')),
            ],
            options={
                'verbose_name': 'Email',
                'verbose_name_plural': 'Emails',
            },
            bases=('crm.activity',),
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('activity_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='crm.activity')),
                ('text', models.TextField(verbose_name='Текст заметки')),
            ],
            options={
                'verbose_name': 'Заметка',
                'verbose_name_plural': 'Заметки',
            },
            bases=('crm.activity',),
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('activity_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='crm.activity')),
                ('reminder_date', models.DateTimeField(blank=True, null=True, verbose_name='Дата напоминания')),
                ('is_recurring', models.BooleanField(default=False, verbose_name='Повторяющаяся задача')),
                ('recurrence_pattern', models.CharField(blank=True, max_length=100, null=True, verbose_name='Шаблон повторения')),
            ],
            options={
                'verbose_name': 'Задача',
                'verbose_name_plural': 'Задачи',
            },
            bases=('crm.activity',),
        ),
        migrations.CreateModel(
            name='WebhookLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event', models.CharField(max_length=50, verbose_name='Событие')),
                ('payload', models.JSONField(verbose_name='Данные запроса')),
                ('response', models.TextField(blank=True, null=True, verbose_name='Ответ')),
                ('status', models.CharField(choices=[('success', 'Успешно'), ('error', 'Ошибка')], max_length=20, verbose_name='Статус')),
                ('status_code', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Код ответа')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('webhook', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='crm.webhook', verbose_name='Вебхук')),
            ],
            options={
                'verbose_name': 'Лог вебхука',
                'verbose_name_plural': 'Логи вебхуков',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Stage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название этапа')),
                ('order', models.PositiveSmallIntegerField(verbose_name='Порядок отображения')),
                ('probability', models.PositiveSmallIntegerField(default=0, verbose_name='Вероятность закрытия (%)')),
                ('color', models.CharField(default='#3498db', max_length=20, verbose_name='Цвет этапа')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('pipeline', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stages', to='crm.pipeline', verbose_name='Воронка')),
            ],
            options={
                'verbose_name': 'Этап воронки',
                'verbose_name_plural': 'Этапы воронки',
                'ordering': ['pipeline', 'order'],
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='ID сообщения')),
                ('message_type', models.CharField(choices=[('incoming', 'Входящее'), ('outgoing', 'Исходящее')], max_length=20, verbose_name='Тип сообщения')),
                ('channel', models.CharField(choices=[('whatsapp', 'WhatsApp'), ('instagram', 'Instagram'), ('telegram', 'Telegram'), ('email', 'Email'), ('sms', 'SMS'), ('other', 'Другое')], max_length=20, verbose_name='Канал связи')),
                ('text', models.TextField(blank=True, null=True, verbose_name='Текст сообщения')),
                ('media_url', models.URLField(blank=True, null=True, verbose_name='URL медиа')),
                ('media_type', models.CharField(blank=True, max_length=50, null=True, verbose_name='Тип медиа')),
                ('metadata', models.JSONField(blank=True, default=dict, verbose_name='Метаданные')),
                ('is_read', models.BooleanField(default=False, verbose_name='Прочитано')),
                ('is_delivered', models.BooleanField(default=False, verbose_name='Доставлено')),
                ('sent_at', models.DateTimeField(verbose_name='Дата отправки')),
                ('delivered_at', models.DateTimeField(blank=True, null=True, verbose_name='Дата доставки')),
                ('read_at', models.DateTimeField(blank=True, null=True, verbose_name='Дата прочтения')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания записи')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления записи')),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='crm.contact', verbose_name='Контакт')),
                ('integration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='crm.integration', verbose_name='Интеграция')),
            ],
            options={
                'verbose_name': 'Сообщение',
                'verbose_name_plural': 'Сообщения',
                'ordering': ['-sent_at'],
            },
        ),
        migrations.CreateModel(
            name='Deal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Название сделки')),
                ('status', models.CharField(choices=[('open', 'Открыта'), ('won', 'Выиграна'), ('lost', 'Проиграна')], default='open', max_length=20, verbose_name='Статус')),
                ('amount', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Сумма сделки')),
                ('currency', models.CharField(default='KZT', max_length=3, verbose_name='Валюта')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('closed_at', models.DateTimeField(blank=True, null=True, verbose_name='Дата закрытия')),
                ('expected_close_date', models.DateField(blank=True, null=True, verbose_name='Ожидаемая дата закрытия')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deals', to='crm.company', verbose_name='Компания')),
                ('contact', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deals', to='crm.contact', verbose_name='Контакт')),
                ('pipeline', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deals', to='crm.pipeline', verbose_name='Воронка')),
                ('responsible', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='responsible_for_deals', to=settings.AUTH_USER_MODEL, verbose_name='Ответственный')),
                ('stage', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deals', to='crm.stage', verbose_name='Этап')),
            ],
            options={
                'verbose_name': 'Сделка',
                'verbose_name_plural': 'Сделки',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Conversation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('conversation_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='ID беседы')),
                ('channel', models.CharField(choices=[('whatsapp', 'WhatsApp'), ('instagram', 'Instagram'), ('telegram', 'Telegram'), ('email', 'Email'), ('sms', 'SMS'), ('other', 'Другое')], max_length=20, verbose_name='Канал связи')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активна')),
                ('is_archived', models.BooleanField(default=False, verbose_name='В архиве')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('last_message_at', models.DateTimeField(verbose_name='Дата последнего сообщения')),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_conversations', to=settings.AUTH_USER_MODEL, verbose_name='Ответственный')),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conversations', to='crm.contact', verbose_name='Контакт')),
            ],
            options={
                'verbose_name': 'Беседа',
                'verbose_name_plural': 'Беседы',
                'ordering': ['-last_message_at'],
            },
        ),
        migrations.CreateModel(
            name='SocialAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_type', models.CharField(choices=[('whatsapp', 'WhatsApp'), ('instagram', 'Instagram'), ('telegram', 'Telegram'), ('facebook', 'Facebook'), ('vk', 'ВКонтакте'), ('other', 'Другое')], max_length=20, verbose_name='Тип аккаунта')),
                ('username', models.CharField(max_length=100, verbose_name='Имя пользователя')),
                ('account_id', models.CharField(blank=True, max_length=100, null=True, verbose_name='ID аккаунта')),
                ('url', models.URLField(blank=True, null=True, verbose_name='URL профиля')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='social_accounts', to='crm.contact', verbose_name='Контакт')),
            ],
            options={
                'verbose_name': 'Социальный аккаунт',
                'verbose_name_plural': 'Социальные аккаунты',
                'ordering': ['contact', 'account_type'],
                'unique_together': {('contact', 'account_type', 'username')},
            },
        ),
        migrations.CreateModel(
            name='Meeting',
            fields=[
                ('activity_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='crm.activity')),
                ('location', models.CharField(blank=True, max_length=200, null=True, verbose_name='Место проведения')),
                ('is_online', models.BooleanField(default=False, verbose_name='Онлайн встреча')),
                ('meeting_url', models.URLField(blank=True, null=True, verbose_name='URL встречи')),
                ('participants', models.ManyToManyField(blank=True, related_name='meetings', to=settings.AUTH_USER_MODEL, verbose_name='Участники')),
            ],
            options={
                'verbose_name': 'Встреча',
                'verbose_name_plural': 'Встречи',
            },
            bases=('crm.activity',),
        ),
    ]
